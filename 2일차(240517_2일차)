20240517
1. VS CODE(개발툴) 설치
- Extensions -> java 검색 -> Extension Pack for java 설치
- Dev Containers 설치하기

2. Github
- Add a README file 체크하기
: 초기값 자동 생성

- 프로젝트 삭제 방법
: 본인아이디/프로젝트명

- README
: 마크업 문법 구글링해서 공부하기

#(#의 갯수에 따라 글자 크기 달라짐)
: 글자 크기를 정의할 수 있음

3. Git
: 버전관리 프로그램
: 내PC 설치해야함

4. gitignore
: 선택적으로 파일 업로드 할 수 있음(예외처리 할 수 있음)

5. Git 관련 영상
: 생활코딩 지옥에선온 Git 시청하기

6. github
: 하나의 레파지토리에서 Add file 해서 파일 추가하기

7. docker 설치
: 작업관리자 -> 가상화가 사용설정으로 되어 있어야 됨

- Docker Hub
: 개발 환경 파일을 올리는 곳

- Image
: Docker Hub에서 Image 파일을 다운
- Container

8. 크롬에서 Docker Hub 사이트 들어가서 jdk 검색해서 다운 받기

9. javac
: javac는 *.java 파일을 *.class 파일로 컴파일 해주는 컴파일러이다.

10. java
: java는 javac로 컴파일 된 class 파일을 실행하는 프로그램이다.

11. 이클립스 JavaStudy 폴더에서 -> 우클릭 -> Team -> pull
: 강사님이 깃허브에 올려주신 자료 임폴트 됨

12. 비교 연산자(조건식 사용할 때 사용)
>
: 왼쪽이 오른쪽보다 크다
>=
: 왼쪽이 오른쪽보다 크거나 같다
<
: 왼쪽이 오른쪽 보다 작다
<=
: 왼쪽이 오른쪽보다 작거나 같다
==
: 왼쪽과 오른쪽이 같다
!=
: 왼쪽과 오른쪽이 다르다

13. 논리 연산자
&&
: 왼쪽과 오른쪽이 모두 참이다
||
: 왼쪽 또는 오른쪽이 하나라도 참이다
!
:(참 또는 거짓)의 반대

14. 삼항 연산자
: 조건(조건식) ? 참 : 거짓

15. 정수 비교(==)
: 값으로 비교

16. 문자열 비교(equals)
: 주소값으로 비교 하기 때문에 ==이 아니라 equals를 사용해서 비교한다.

17. 조건문
- if문
: 조건이 참일 경우만 명령문 실행
- else if
: 여러번 사용 가능
- else
: 마지막에 한번만 사용 가능

18. Switch Case
: 범위를 지정해서 사용할 때 사용
: 고정되어(선택되어) 있는 기능을 구현할 때 사용

package java0517;

/*********************************
 * >> 연산자 
 * 비교 연산자
 * 논리 연산자
 * 삼항 연산자
 * 문자열 기능
 * 정수 비교
 * 문자열 비교
 * 특수 문자
 *********************************/
public class Study01 {

	public static void main(String[] args) {
		System.out.println(5 > 3); // true
		System.out.println(5 <= 3); // false
		System.out.println(5 < 3); // false
		System.out.println(5 <= 3); // false
		System.out.println(5 == 3); // false
		System.out.println(5 != 3); // true
		
	
		System.out.println("==================");
		
		// 정수 비교
		int num1 = 3;
		int num2 = 3;
		System.out.println(num1 == num2); // true
		
		// 문자열 비교
		String s1 = new String("Java");
		String s2 = new String("Java");
		System.out.println(s1 == s2); // false
		
		String s3 = new String("Java");
		String s4 = new String("Java");
		System.out.println(s3.equals(s4)); // true		
		
	}

}

package java0517;

/*********************************
 * >> 조건문 
 * if 		: if(조건식) {}
 * else	if	: if(조건식) {} else if(조건식) {}
 * else		: if(조건식) {} else {}
 *********************************/
public class Study02 {

	public static void main(String[] args) {
		
		/*
		boolean 논리값 = true;
		if(true) { // 조건식에 true를 넣으면 무조건 실행
        	System.out.println("참");
        	논리값 = false; 
        }
		 		 
		if(논리값) {
        	System.out.println("논리값이 참이다.");
        }
		*/
		
		/*
		if(!논리값) { // false가 되어 실행X
        	System.out.println("부정의 논리값"); 
        }
		 
		int a, b;
		a = 5; //5
        b = ++a; //6
        System.out.println(a + ":" + b); // 6:6
		  
		if(a == b) {
        	System.out.println("a와 b는 같다."); 
        }else {
			System.out.println("a와 b는 다르다."); 
        }
		*/
		
		/*
		boolean 논리값 = true;
		if(!논리값) { // 거짓(조건식을 변환시킨다해서 값이 바뀌는 것이 아님 => 아래 식에 영향X)
			논리값 = !논리값;			
		}else if(논리값) { // 참
			System.out.println("참이다.");
		}
		*/
		
		/*
		if(논리값) {			// 거짓
			논리값 = !논리값;
		}
		System.out.println(논리값);
		if(논리값) {	// 참
			System.out.println("참이다.");
		}
		*/
		
		// 중요 포인트!
		/*
		int a, b;
		a = 10;
		b = 14;
		
		if(!(a < b)) {
			System.out.println("B 크다.");
		} else if(!(a > b)) {
			System.out.println("A가 크다.");
		}
		*/
		
		int a = 5;
		int b = 3;
		int c = 5;
		
		if(a>b) {
			System.out.println("참");
		}else {
			System.out.println("거짓");
		}
		
		if(a>=b) {
			System.out.println("참");
		}else {
			System.out.println("거짓");
		}
		
		if(a<b) {
			System.out.println("참");
		}else {
			System.out.println("거짓");
		}
		
		if(a<=b) {
			System.out.println("참");
		}else {
			System.out.println("거짓");
		}
		
		if(a==c) {
			System.out.println("참");
		}else {
			System.out.println("거짓");
		}
		
		if(a!=b) {
			System.out.println("참");
		}else {
			System.out.println("거짓");
		}
	}

}
package java0517;

public class Study03 {

	public static void main(String[] args) {

		int a = 1;
		switch (a) {
		case 1:
			System.out.println("값이 1입니다.");
			break;
		default:
			System.out.println("값이 1이 아닙니다.");
		}
		
	}

}

package java0517;

import java.util.Scanner;

public class Study03 {

	public static void main(String[] args) {

		// int a = 1;
		Scanner a = new Scanner(System.in); // 키보드의 값을 받기 위해 Scanner 사용
		//System.out.println(a.nextInt()); // nextInt()의 의미는 숫자로 받는다라는 의미
		
	
		
		switch (a.nextInt()) { // nextInt()의 의미는 숫자로 받는다라는 의미
		case 1:
			System.out.println("값이 1입니다.");
			break;
		default:
			System.out.println("값이 1이 아닙니다.");
		}
		
		
		
		switch (a.nextLine()) { // nextLine()의 의미는 문자열로 받는다라는 의미
		case "박윤신":
			System.out.println("박윤신 입니다.");
			break;
		default:
			System.out.println("박윤신이 아닙니다.");
		}
		
		
		switch (a.next()) { // next()의 의미는 문자로 받는다라는 의미
		case "A":
			System.out.println("A 입니다.");
			break;

		default:
			System.out.println("A가 아닙니다.");
		}
		
	}

}

