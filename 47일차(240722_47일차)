20240722
1. 애플리케이션 테스트 수행

2. mockito

3. Junit 테스트는 같은 결과가 나오는게 핵심

4. @MockBean
: 모키또, 껍데기

5. Mockito.when(ts.getString(a)).thenReturn(r); // 가상의 정보를 넣어주는 역할

6. mockito는 1차 테스트용으로만 사용

7. @WebMvcTest(TestController.class) 이 어노테이션은 아래의 2개의 어노테이션을 대체할수 있다.
//@ExtendWith(SpringExtension.class)
//@Import(TestController.class)

8. MockMvc
: 객체이다.


9. String content = object.writeValueAsString(map);
: 리턴 자료형이 Map일 경우 문자열로 바꿔준다.

10. SpringFramework -> LEARN -> 5.3.37 -> Testing -> Integration Testing -> 3.7.MockMvc -> Performing Requests
: https://docs.spring.io/spring-framework/docs/5.3.37/reference/html/testing.html#spring-mvc-test-server-performing-requests

11. @GetMapping("/test/3")
	public TestDTO test3(@RequestBody TestDTO dto) {
		return TestDTO.builder()
				.no(1).name("홍길동")
				.age(20)
				.gender(true) // 남자라서 true
				.build();
	}
: 리턴 타입이 TestDTO 일 경우는 데이터 타입으로 리턴한다고 생각하면 된다.

12. Mockito.when(t1Service.findList(null)).thenReturn(list);
: 껍데기 만들기
===============================================
13. Docker를 사용하려면 image를 받아야 한다.
1. 버전확인
> docker version

2. 이미지 확인
> docker image list
> docker image ls
> docker images(이 명령어를 주로 사용한다.)

3. 이미지 받기
> docker pull {이미지명:태그}

4. 컨테이너 생성 및 실행
> docker run

5. docker hub 검색 후 -> mariadb 검색

6. cmd창에서 docker pull mariadb -> docker images
===============================================


========================================================
- 팀프로젝트 대략적 일정 -
1. 팀원 개별 개발 능력 테스트 판단
: 팀원 파악, 이번주 안으로 8월달 일정 세워서 강사님께 송부드리기

2. 프로젝트 주제 및 시장 조사 (UI/UX(Figma)) (8월달)

3. 데이터베이스 모델링 프로젝트 생성 및 파트 결정, 기능 설계 (9월달)

4. 프로젝트 테스트 및 추가 기능, 배포 및 포트폴릴오 작성(10월달)
========================================================
