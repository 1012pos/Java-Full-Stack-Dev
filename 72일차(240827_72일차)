20240827
1. 오늘은 토큰을 발급한 이후에 파라메타를(data: {"token": token}) 전달 안하고, 헤더라는 영역에(xhr.setRequestHeader("Authorization", "Token");) 
넣어서 보내는 작업을 할것이다.

2. token.js파일에서 data: {"token": token} 이부분이 주석처리가 되면 TestController.java파일에서의
아래의 코드에서 @RequestParam 으로 받을수가 없다라는 말이다.
	@PostMapping("/token")
	public Claims getToken(@RequestParam("token") String jwt) {
		if(token.isValidToken(jwt)) {
			return token.getToken(jwt);
		}
		return null;
	}
	
3. 	xhr.setRequestHeader("Authorization", "Token"); -> xhr.setRequestHeader("Authorization", token);
: "Token" -> token 로 수정

4. Request 요청 객체에 Header가 있다.

5. 기존의 코드는 파라미터로 보냈던거였는데, req.getHeader("Authorization")를 이용해서
헤더 정보로 받는걸로 수정했다.(@PostMapping("/getUser") 참조)

6. "/**"
: 모든 주소 허용

7. 매번 String authorization = req.getHeader("Authorization")를 작성해서 사용하면
힘드니깐, 공통코드 즉, 메서드로 만들어서 사용하면 좋다.(check 메서드 참조)


8. JQuery ajax
: https://api.jquery.com/jQuery.ajax/ 참조
: https://api.jquery.com/

9. $("form").on("submit", e => { // form 태그를 의미
        // form 태크가 가지고 있는 이벤트를 막는 부분
        e.preventDefault();
        let params = {
            "userNm" : $("#userNm").val(),
            "userPwd" : $("#userPwd").val()
        }
        console.log("form", params);
    });
	
10. $("form").on("submit", e => { // form 태그를 의미
        // form 태크가 가지고 있는 이벤트를 막는 부분
        e.preventDefault();
        let params = {
            "userNm" : $("#userNm").val(),
            "userPwd" : $("#userPwd").val()
        }
        console.log("form", params);

        // "/jsLogin"
        //  비동기
        $.ajax({
            method: "POST",
            url: "http://localhost:80/jsLogin",
            data: params,
            beforeSend : function(xhr){
                xhr.setRequestHeader("Authorization", "");
            },
            success: function(res) {
                console.log(res);
            },
            error: function(res) {
                console.log(res);
            }
        });


    });	
	
11.  // "/jsLogin"
        //  비동기
        $.ajax({
            method: "POST",
            url: "http://localhost:80/jsLogin",
            data: params,
            beforeSend : function(xhr){
                //xhr.setRequestHeader("Authorization", "");
            },
            success: function(res) {
                console.log(res);
                localStorage.setItem("token", res.token);
            },
            error: function(res) {
                console.log(res);
            }
        });


    });
	
12. 토큰 꺼내오기(사용자 정보 꺼내오기)
: Claims claims = token.getToken(authorization);
- token.html(VSCODE)

<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HOME</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="/js/token.js"></script>
    <link href="/css/app.css" rel="stylesheet">
</head>
<body>
    <nav class="container mt-2">
        <ul class="nav nav-tabs">
            <li class="nav-item">
              <button type="button" class="nav-link active" id="btn1">Token 요청</button>
            </li>
            <li class="nav-item">
              <button type="button" class="nav-link active" id="btn2">Token 정보</button>
            </li>
            <li class="nav-item">
                <button type="button" class="nav-link active" id="btn3">Admin 정보</button>
              </li>
        </ul>
    </nav>
    <div class="container mt-2">
        <p id="token" class="text-break"></p>
        <ul id="tokens"></ul>
    </div>
    <div class="container mt-2">
        <form>
            <div class="mb-3">
                <label for="userNm" class="form-label">User Name</label>
                <input type="text" class="form-control" id="userNm" placeholder="사용자 이름" required autocomplete="off">
            </div>
            <div class="mb-3">
                <label for="userPwd" class="form-label">Password</label>
                <input type="password" class="form-control" id="userPwd" placeholder="사용자 비밀번호" required autocomplete="off">
            </div>
            <button type="submit" class="btn btn-primary">Token 요청</button>
        </form>
    </div>
    <div class="container mt-2">
        <iframe src="https://jwt.io/#debugger-io" title="JWT" style="width: 100%; height: 80vh;"></iframe>
    </div>
</body>
</html>
