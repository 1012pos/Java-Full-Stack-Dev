20241002
1. 리액트에 app5 프로젝트 설치, 강사님이 올려주신 코드 App.js, App.css에 코드 넣기

2. npm i react-router-dom 설치

3. "9월30일에" 코드 주신거 반영은 안한 코드임(토큰에서 한글 깨지는 부분 해결하는 코드임 MyRef에 step7 보면 됨)
const Base64Decode = txt => {
    return decodeURIComponent(window.atob(txt).split('').map(function(c) {
        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
    }).join(''));
}

export const getToken = token => {
    const payload = token.split(".")[1];
    const txt = payload.replace(/-/g, '+').replace(/_/g, '/');
    return JSON.parse(Base64Decode(txt));
}

4. // array[0] ~ array[4]; "내용" > 신규 배열에 넣는 "..."

5. 비동기에는 axios, fetch 등이 있다.

6. Promise

7. 
// 재사용성
const getData = async page => {
  const res = await fetch(`/${page}.json`);
  return res.json();
}

const View1 = () => {
  const [array, setArray] = useState([]);
  useEffect(()=>{
    const data = ["내용","내용","내용","내용","내용"];
    setArray(data);
  }, [])
  const clickEvent = () => {
    const data = ["내용","내용","내용","내용","내용"];
    // array[0]~array[4]; "내용" > 신규 배열에 넣는 작업 "..."
    setArray([...array, ...data])
  }
  return (
    <div className="container">
      <h1 className="head">화면1</h1>
      <ol className="body">
        {
          array.map((row, index) => <li key={index}>{row}</li>)
        }
      </ol>
      <button type="button" className="more" onClick={clickEvent}>더보기</button>
    </div>
  );
}
const View2 = () => {
  const [array, setArray] = useState([]);
  const [nextPage, setNextPage] = useState(1);
  useEffect(()=>{
   const res = getData("data1");
   res.then(data => {
    setArray(data.results);
    setNextPage(data.page + 1);
   });
  },[]);
  const clickEvent = () => {
    const res = getData(`data${nextPage}`);
    res.then(data => {
      setArray([...array, ...data.results]);
      setNextPage(data.page + 1);
    }) 
  }
  
8. 아래의 코드는 위의 코드를 간결화 시킨것임
// 재사용성
const getData = async page => {
  const res = await fetch(`/${page}.json`);
  return res.json();
}

const View1 = () => {
  const [array, setArray] = useState([]);
  useEffect(()=>{
    const data = ["내용","내용","내용","내용","내용"];
    setArray(data);
  }, [])
  const clickEvent = () => {
    const data = ["내용","내용","내용","내용","내용"];
    // array[0]~array[4]; "내용" > 신규 배열에 넣는 작업 "..."
    setArray([...array, ...data])
  }
  return (
    <div className="container">
      <h1 className="head">화면1</h1>
      <ol className="body">
        {
          array.map((row, index) => <li key={index}>{row}</li>)
        }
      </ol>
      <button type="button" className="more" onClick={clickEvent}>더보기</button>
    </div>
  );
}
const View2 = () => {
  const [array, setArray] = useState([]);
  const [nextPage, setNextPage] = useState(1);
  useEffect(()=>{
    const res = getData(`data${nextPage}`);
    res.then(data => {
    setArray([...array, ...data.results]);
  });
},[nextPage]);
const clickEvent = () => {
    setNextPage(nextPage + 1);
  }  

9. disabled={show} style={{display: show ? 'none' : '' }
방법1 : disabled={show}
방법2 : style={{display: show ? 'none' : '' }

10. 스크롤 감지
: npm i react-intersection-observer 설치
: https://www.npmjs.com/package/react-intersection-observer


11. npm사이트 -> react-query
: npm i @tanstack/react-query 설치
: https://www.npmjs.com/package/@tanstack/react-query

12. data?
: ?를 사용하는 이유는 undefined 자바스크립트 문법

13. http://localhost:8080/api?page=1

14. DB에서 페이징 처리
: LIMIT(인덱스, 보여줄갯수)
SELECT * FROM board LIMIT 0,5; 
SELECT * FROM board LIMIT 5,5;
SELECT * FROM board LIMIT 10,5;
