20240826
1. vscode 프로젝트인 web에 token.html, token.js 넣기

2. Token(식별할수 있는 키)
: 데이터에 대한 권한이(인증,인가) 필요하다. 이때 Token(식별할수 있는 키)을 사용한다.

3. 프론트와 백엔드의 분리하여 사용할때 프론트와 백엔드를 연결해 줄수 있는게 Token이다.
그리고 화면쪽에서 open Api를 사용할 수있다.

4. 애플리케이션과 DB는 켜져 있어야 한다.

5. http.csrf(csrf -> csrf.disable());
   http.cors(cors -> cors.disable()); // CrossOrigin 관련 
:  CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.
 
6. CORS는 Cross-Origin Resource Sharing의 약자이다. 브라우저에서 다른 출처의 리소스를 공유하는 방법이다.
아래의 CORS policy 오류 메시지는 CORS 정책을 위반할 때 발생한다.
:  CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.

7. $(document).ready(()=> {
    console.log("Token!!");

    const EVENT1 = () => {
        $.ajax({
            method: "GET",
            url: "http://localhost/token",
            //url: "http://197.168.0.56/token",
            beforeSend : function(xhr){
                xhr.setRequestHeader("Authorization", "Token");
            },
            success: function(res) {
                console.log(res);
                $("#token").text(res);
                $("#tokens").empty();
                res.split(".").forEach(e => $("#tokens").append(`<li class="text-break">${e}</li>`)); // .을 기준으로 나눔
            },
            error: function(res) {
                console.log(res);
            }
        });
    }
    EVENT1();
});

8. localStorage (w3schools)

9. localStorage.setItem("lastname", "Smith");
: 넣는다.

10. localStorage.getItem("lastname");
: 가지고 온다.

11.  localStorage.setItem("token", res); // token을 넣는다(key, value).
     localStorage.getItem("token"); // token을 가지고 온다.
: F12의 Application에서 확인 가능

12. https://www.w3schools.com/html/html5_webstorage.asp

13. token의 발행처는 스프링이다.

14. d-none
: display none

15. id를 각각 주어서 서로 다른 이벤트를 처리한다.

16. Token은 입장권이라고 생각

17. 티켓끊는사람(클라이언트), 정보를 localStorage에 저장한다.

18. 티켓파는사람(스프링)

19. ajax 비동기

20. 동기는 절차가 있는것

21. 동기를 해결하기 위해 -> 비동기를 사용

22. 데이터를 가지고 올때 느림을 방지하기 위해 비동기를 사용한다.

23. 토큰을 다룰때 ajax를 사용한다.

24. 발행처(토큰 발행처)는 개발자가 다루어야 하는 영역

25. 발행과 검증은 개발자가 해야 한다.(보안)

26. 토큰은 백으로 접근하는 식별코드이다.

27. 동일한 사람도 동일한 토큰을 받을수는 없다. 토큰은 유지가 되면 안된다.(보안)

28. 발행처는 백에서 하는 거다.

29. 웹서버(브라우저) <->  웹어플리케이션 서버(WAS)

30. 토큰을 다룰때, 공통코드로 다루냐? 아니면 필터로 다루느냐 2가지 방법이 있다.

31. 데이터는 이제 비동기로 가져오게 해야 한다.(ajax로 스프링쪽으로 요청한다.)

32. 원래는 브라우저가 80 포트이고 WAS는 다른 포트를 사용하지만, 우리는 현재 WAS를 80으로 사용하고,
브라우저를 5500 포트로 사용하고 있다.

33. 원래는(현업) 외부에 접근하는 포트는 80(프론트)으로 하고, 내부에서는 웹 서버와, 웹 어플리케이션, DB를 각각 연결한다.
다만 외부에서 접근못하게 네트워크 기술로 가려 준다.

34. 내부망과 외부망을 알면 좋다.

35. 토큰은 프론트와 백엔드를 연결시켜 주는 역할을 한다.
