20240906
1. 회원쪽은 선우학생 (const host2 = "http://192.168.0.67:9000"; // 로그인 부분) -> const host2 = "http://192.168.0.70:9000"; 로 변경
: 아이디: 사용자1, 비밀번호: 1234
: 아이디: 관리자, 비밀번호: 1234

2. 리스트 : 내꺼 (const host = "http://192.168.0.52:8080"; // 소켓 부분) -> const host = "http://192.168.0.45:8080"; 로 변경

3. 소켓 : 내꺼 (const host = "http://192.168.0.52:8080"; // 소켓 부분) -> const host = "http://192.168.0.45:8080"; 로 변경

4. http://127.0.0.1:5500/v2/list.html 로 접근

5. 앞으로 DB를 선우 학생꺼로 오픈시켜서 사용할 예정

6. 시험 대비
- Socket 프로젝트 참조
: Note.java 참고
: Client.java 참고(클라이언트는 소켓 서버가 켜져 있어야 사용가능 하다.)
: Server.java 참고
: ClientHandler.java 참고
: MultiClientServer.java 참고

- WebSocket 프로젝트 참조
: WebSocketApplication.java 참고
: WebSocketConfig.java 참고
: socket.js 참고

7. VSCODE의 Termianl에서 하기(cmd창에서 하지 말기)
: docker부터 켜기(DB)
: cd C:\IDE\sts-4.22.1.RELEASE\work\WebSocket
: dir
: gradle bootJar 혹은 gradle clean bootJar, 만약 gradle 이 없을 시 -> gradlew bootJar 혹은 gradlew clean bootJar
: ./gradlew bootRun(실행이 됨)

8. 학원 서버 PC가 켜져 있으면 아래의 설정으로 외부(집 등)에서 DB 접속 가능 
: 신규로 외부로 만들고,  220.71.94.70 / port : 13306, 사용자 : root / 비밀번호 : 1234

9. 	@PostMapping("/save")
	public Map save(@RequestParam Map map) {
		log.info("Map : {}", map);
		tm.save(map);
		// 아래의 코드는 실시간으로 글 작성 확인 가능 한 코드 
//		simpMessagingTemplate.convertAndSend("/topic/accept", map);
		return map;
	}
