20240617
1. C:\IDE\sts-4.22.1.RELEASE\work\git
: 강사님 github 파일

2. github 하는 방법 및 clone 해서 프로젝트 여러개 하는 방법 공부하기

3. 커머스 회사
AS-IS, TO-BE

4. AS-IS -> TO-BE를 만들어야 한다.

5. 현행 시스템 분석하기
: AS-IS

6. 요구사항 확인하기
: TO-BE

7. 이번주 목요일 1~2장 발표

8. 분석 클래스 목록 (요구사항 확인)

9. Maven 

10. AbstractAnnotationConfigDispatcherServletInitializer 이거를 상속받으면 web.xml을 만들지 않아도 사용가능
WebConfig.java 파일

package app.config;

import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;

public class WebConfig extends AbstractAnnotationConfigDispatcherServletInitializer {

	@Override
	protected Class<?>[] getRootConfigClasses() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	protected Class<?>[] getServletConfigClasses() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	protected String[] getServletMappings() {
		// TODO Auto-generated method stub
		return null;
	}

}

11. src -> main -> webapp-> WEB-INF -> web.xml 파일의 코드에서 <context-param> 이부분이랑 같은 맥략은 아래와 같다.
: @Override
	protected Class<?>[] getRootConfigClasses() {
		return null; // 외부 설정 내용 등록(Mybatis)
	}
	
12. src -> main -> webapp -> WEB-INF -> web.xml 파일의 코드에서 <servlet> 이부분이랑 같은 맥략은 아래와 같다.
: @Override
	protected Class<?>[] getServletConfigClasses() {
		return null; // 스프링 관련 설정 내용 등록
	}	
 
 
 13. src -> main -> webapp-> WEB-INF -> web.xml 파일의 코드에서 <servlet-mapping> 이부분이랑 같은 맥략은 아래와 같다.
 : @Override
	protected String[] getServletMappings() {
		return null; // URL 패턴 등록
	}

14. http://localhost:8080/SpringStudy2/
: 안녕이 떠야함.

15. servlet-context.xml에서 beans:beans에서 엑박 뜨면 아래와 같이 해결해주면 된다.
: window -> Preferences -> XML(Wild Web Developer) 여기서 체크해줘야함

16. WEB-INF 밑에 web.xml 파일을 만들지 않기 위해 위의 내용들을 한것이다.

17. SpringConfig.java 파일에 있는 코드 때문에 -> HomeController.java에 있는 코드를 사용할 수 있다.

18. /WEB-INF 하위 파일들을 만드는 이유는 원래부터 하위 파일들을 접근할수 없게 설정되어 있기 때문이며,
JSP파일을 직접적으로 부를수 없게 할수 있는 방법이 이 방법뿐이다. 그렇기 때문에 URL을 통해 접근할수가 없다.
그리고 Spring에서 ViewResolver를 사용하기 위함도 있으며 화면을 출력용을 만들기 위해서이다.
@Override
	public void configureViewResolvers(ViewResolverRegistry registry) {
		InternalResourceViewResolver ivs = new InternalResourceViewResolver();
		ivs.setPrefix("/WEB-INF/views/");
		ivs.setSuffix(".jsp");
		registry.viewResolver(ivs);
	
	}
	
package app.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;

@Controller
public class HomeController {

	@GetMapping("/")
	public String home() {
		return "home";
	}
	
}

: /WEB-INF/views/  +   ? 가변적(ex, home)+ .jsp
-> /WEB-INF/views/  +    home)+ .jsp
따라서 위의 적은 코드 처럼 조합이 될수 있는게 있는게, "Spring의 ViewResolver"가 해준다.

19. 


