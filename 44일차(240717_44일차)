20240717
1. 시험문제가 메소드별 테스트 하는것이다.(애플리케이션 테스트 관리)

2. TDD

3. 자바는 외부라이브러리인 JUnit5을 사용해서 테스트 한다.

4. 금요일 시험에 JUnit 관련 어노테이션(Annotations)이 시험에 나온다.(https://junit.org/junit5/docs/current/user-guide/)

5. 이번에는 스프링사이트에서 프로젝트를 생성할 것이다.(https://start.spring.io/)

6. 스프링부트는 @SpringBootApplication의 어노테이션이 있어서 패키지 하위는(package com.folder) IOC 컨테이너 빈객체가 된다.

7. @SpringBootApplication
: @SpringBootTest는 위의 어노테이션과 같은 의미이다.

8. @Disabled
: 실행을 안할꺼다라는 어노테이션이다.

9. @DisplayName
: 어떤걸 테스트하는지 명확하게 명시해주는 어노테이션이다.
ex) @DisplayName("정수 6과 변수 a 비교하는 테스트")

10. JUnit
: 메소드와 메소드를 비교한다

11. 테스트를 하기 위해 메모리르 절약하기 위해 딱 필요한것만 테스트 할때 사용하는 어노테이션 
: @ExtendWith(SpringExtension.class) // 단위테스트 환경 설정
: @Import({AppService.class})		 // 지정한 클래스 가져오기

12. Spring io -> Projects -> SpringFramework -> LEARN -> 5.3.37-> Reference Doc -> Core-> 1.2 Container Overview
: 위의 경로에서 내려보면 아래의 코드가 있음

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="..." class="...">  
        <!-- collaborators and configuration for this bean go here -->
    </bean>

    <bean id="..." class="...">
        <!-- collaborators and configuration for this bean go here -->
    </bean>

    <!-- more bean definitions go here -->

</beans>

13. <bean id="appService" class="com.folder.service.AppService"/>
: id는 클래스명에서 앞부부만 "소문자"로 바꿔준다.

14. @ExtendWith(SpringExtension.class) 이코드가 있어야 @Test를 실행 시킬수 있다.

15. @ContextConfiguration(locations = "classpath:context.xml")
: 여기서 classpath(컴파일되는 위치)가 중요하다. xml을 사용할때 classpath를 작성해줘야 한다.

16. 테스트가 동작하는 방법 3가지
1. @SpringBootTest
: 전체적으로 사용(메모리사용 많음, 무거움)

2. @ExtendWith(SpringExtension.class) // 단위테스트 환경 설정
   @Import({AppService.class})		   // 지정한 클래스 가져오기
: 필요한것만 테스트할때 사용(제일 가벼움)
   
3.  @ExtendWith(SpringExtension.class)
	@ContextConfiguration(locations = "classpath:context.xml")
: SpringFramework에서 xml 파일이 있을때 사용

17. https://junit.org/junit5/ -> User Guide
: JUnit 5 User Guide 공부하기!!!
: JUnit 라이브사이클 공부하기

18. @DisplayName
: 메소드 및 클래스에 사용할 수 있다.

19. @Order
: 위의 어노테이션을 이용해서 메소드 실행순서를 정할 수 있으며 
클래스에 @TestMethodOrder(OrderAnnotation.class) 줘야 실행순서에 맞게 실행 된다.
만약, @Order 및 @TestMethodOrder(OrderAnnotation.class) 안넣어주면 이름순으로 실행이 된다.

20. jupiter
: 5를 의미한다.

21. 테스트를 할때는 기준(하나의 법칙)을 정해서 해야 한다.

22. Vue.js 시작!!!

23. npm
: node가 있다는 뜻

24. Vue 시작하기 위해서는 https://v3-docs.vuejs-korea.org/guide/quick-start.html#creating-a-vue-application 사이트에서
문서 -> 빠른시작 그다음 VS code에서 npm init vue@latest 를 쳐보기 -> 다 no로 하면 됨

25. 만약 Vue.js가 생성안되면 관리자모드로 VS Code 실행하기

26. Vue.js에서 public은 정적파일이 놓아두는 곳이다. 

27. C:\IDE\Node> cd vue-project -> C:\IDE\Node\vue-project> npm run build

28. node는 모듈이 필요하다. VS Code에서 아래의 코드를 작성한다.
: npm install

29. npm install 설치 후 -> npm run dev 명령어를 친다.

30. VsCode에서 -> Extensions -> Vue 3 Snippets  및 Vue Pack 및 vue-format 설치하기

31. 원래는 부모 자식간에 아래의 방식으로 작성해야 하는데,
	header nav {
	 }
	 
	sass를 주면 아래처럼 작성할 수 있다.
	<style lang="sass" scoped>
	header {
	  line-height: 1.5;
	  
	  nav {
	  
	 }
	}
	
32. C:\IDE\Node> npm install -g @vue/cli

33. 
