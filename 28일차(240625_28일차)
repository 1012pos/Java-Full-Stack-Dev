20240625
1. 스프링 URL 패턴 공부
2. 파라미터 전달(MODEL, REDIRECT)

================
3. 앞으로는 context path는 /로 할 예정임
4. 앞으로 주소를 lh/로 하기 위해 아래의 단계를 거쳐야 함. 
- tomcat v9.0 -> ports에서 8080 -> 80로 수정
- 메모장 관리자모드로 켜기 C:\Windows\System32\drivers\etc -> 127.0.0.1 lh 로 수정
그다음 처음에 주소창에 http://lh/ 검색
5. 주소패턴 만들고, 리턴을 어디로 할거인가를 잘 생성해야 한다.
6. a 태그는 무조건 get메소드 형식
: a태그는 무조건 get 호출 방식
: <a href=""></a>
7. form 의 submit은 get이 기본이지만 post 방식 둘다 가능
8. 메소드의 리턴 타입이 보이드 일 경우 파일명으로 주소값을 찾아감, 파일명과 주소값이 같으면 파일명으로 주소값을 찾아줌
: http://lh/study/s1/url
9. 주소가 get방식, post방식 둘다 허용 가능하게 하는 방법
10. @RequestMapping는 메소드의 타입을 지정하지 않으면 다 가능, 다만 지정했을경우 그 지정된 메소드 형식으로 호출
11.


package app.study;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
//@RequestMapping("/s1") // 아래의 메소드는 s1 아래의 주소라고 명시함, 그리고 s1은 클래스에 주는 주소다.
@RequestMapping("/study/s1") // 아래의 메소드는 s1 아래의 주소라고 명시함, 그리고 s1은 클래스에 주는 주소다.
public class Study01 {

	// RequestMapping 방식
//	@RequestMapping("/") // url >> /s1/
//	@RequestMapping("") // url >> /s1/ >> /s1
	@RequestMapping("/url") // url >> /s1/ >> /s1
//	public String url1() {
	public void url1() {
		System.out.println("기본 화면");
//		return "study/s1/url"; // 폴더와 파일명까지 작성해야 한다.
//		return "url"; // 폴더와 파일명까지 작성해야 한다.
	}
	
	// RequestMapping 특정 메소드 선택 방식
//	@RequestMapping(value = "/", method = RequestMethod.GET) // 하나의 주소로 인지함(http://lh/s1/)
//	@RequestMapping(value = "/", method = RequestMethod.POST) // 주소로 인지 못함(http://lh/s1/)
	@RequestMapping(value = "/s", method = RequestMethod.GET)
//	@RequestMapping(value = "/s", method = RequestMethod.POST)
	public void url2() {
		System.out.println("고정 메소드 처리");
	}
	
	// GetMapping 방식
	public void url3() {
		
	}
	
	// PostMapping 방식
	public void url4() {
		
	}
	
}




