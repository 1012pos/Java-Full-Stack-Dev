20240903
1. client -> WEB SERVER(80포트, 정적인 파일 담당(이미지 파일 등), Flush 기능(연결 시켜줌), 앞에서, 프론트쪽 영역)
          -> WEB APPLICATION SERVER(뒤에서 담당하는 서버, 동적인 것을 담당, 가공해서 전달), WEB SOCKET SERVER가 WEB APPLICATION SERVER에 들어간다
          -> WEB SOCKET SERVER(다중 클라이언트에게 동일한 정보를 전달, 데이터를 실시간으로 싱크맞춰줌, 알림용으로 많이 사용, 보통 따로 구분)

: 위의 3가지를 우리가 배우는 내용이다.


2. WEB SERVER를 사용하지 않으면 프론트쪽 프레임워크를 사용하지 못하기 때문에 사용해야 한다.
그렇기 때문에 개발을 할때 WEB SERVER + WEB APPLICATION SERVER 같이 사용해야 하며, 어떤 기능을
구현하는냐에 따라 WEB SOCKET SERVER도 같이 사용해야 한다.
그리고 WEB APPLICATION SERVER로만 개발을 할경우 WEB APPLICATION SERVER 다운되면 일이 커지기 때문에
WEB SERVER + WEB APPLICATION SERVER 으로 나누어서(프론트와 백엔드) 개발하는 것이다.

3. WEB SERVER
: Apache24, iis, Nginx(엔진X, 요즘 가장 많이 사용)

4. WEB APPLICATION SERVER
: Tomcat

5. SpringStudy3 프로젝트 활용
- templates.v2 정적파일이 있음
- static에서 v2 정적파일이 있음
=> vscode에서 v2 폴더 생성 후 위의 파일 넣기

6. Data2Conroller.java
: @CrossOrigin(origins = "*") 추가
: @CrossOrigin(origins = "http://192.168.0.52:5500") 추가
: View2Controller.java에는 추가 안해도 됨....

7. http://192.168.0.56:5500/v2/list.html
: 강사님 주소에서 Network탭 -> 새로고침 -> list.js 비교분석

8. http://192.168.0.52:5500/v2/list.html
: 내 주소

9. 먼저 소켓을 먼저 SpringStudy3에 세팅해라 -> 디테일 페이지에서 승인 or 미승인 눌렀을때 새로 고침을 눌러야 반영되는것을
실시간으로 바뀌게끔 해보기
