20240605
1. http://localhost:8080/WebServlet/www/jsp/Form.jsp 입력하면 데이터를 입력하세요라는 화면이 뜨면 경로에 파일을 잘 넣은것임
2. 요청과 응답에 대한 흐름
3. 전송은 요청과 같음
4. form 태그 안에 action은 경로를 지정 method는 어떤 방식으로 보낼지를 선택하면 되고, get 과 post가 있다. 
5. method가 get 이기때문에, servlet에서 doGet만 신경쓰면 된다. 즉, method(get, post)의 방식에 따라 다르다.

6. input 태그에서 name 은 데이터에 관련된 "키"다. 
7. http://localhost:8080/WebServlet/www/jsp/Result?cnt=0&txt=%EC%95%88%EB%85%95

8. Result?cnt=0&txt=%EC%95%88%EB%85%95
: Result는 form 태그에서 action에 들어가는 경로
: cnt는 변수 뒤에는 값
: txt는 변수 뒤에는 값

9. F12(개발자 도구)에서 Network 탭에서 Payload를 보면 어떤 값을 넣긴것을 알 수 있다.

10. Form 태그에서의 action 주소값과 @WebServlet("/Result") 주소값이 같아야 한다.

11. 프로젝트 클릭후 -> 우측키 -> Properties -> Web Project Settings -> Context Path를 WebServlet 에서 /로 수정하면 된다.
: <form action="/WebServlet/Result" method="get">  옆에 처럼 작성하지 않고 /Result로 작성하기 위함.

12. Tomcat v9.0 더블 클릭 후 -> Modules -> Path 에서 /WebServlet 을 확인할 수 있다.


13.form에서 보낸 변수 cnt, txt를 request.getParameter();를 사용해서 받는데, 무조건 문자로 받는다.
: String cnt = request.getParameter("cnt");
: String txt = request.getParameter("txt");

14. 정적파일은 WebContent 안에 넣고, WEB-INF와 동일 선상이다.

15. http://localhost:8080/WebServlet/www/jsp/Form.jsp

16. PrintWriter pw = response.getWriter(); // 브라우저에 출력하기 위함

17. .append() 함수

18. 브라우저에서 한글 깨짐 현상이 발생할 시 아래의 코드를 작성하는데, 맨위에 작성하는것을 추천 이유
	response.setCharacterEncoding("UTF-8");
	response.setContentType("text/html; charset=UTF-8");
	
19. 데이터를 전송할때 form 태그를 사용한다.

20. 전송방식 get은 주소창에 쿼리스티링이 명시되어 있다. http://localhost:8080/WebServlet/Result?cnt=3&txt=%EC%9E%85%EB%8B%88%EB%8B%A4%
: get 방식은 request.setCharacterEncoding("UTF-8");가 필요 없다.


21. 전송방식이 post는 쿼리스티링이 명시되어 있지 않다.(http://localhost:8080/WebServlet/Result)
: post 방식은 body에 데이터가 담겨 있다.
: post 방식은 get 방식과 달리 request.setCharacterEncoding("UTF-8"); 필요하다.

22. method의 get 방식과 post 방식의 차이점 중 하나가 F12(개발자 도구)에서 Network 탭에서 새로고침 후 파일 클릭하고
Payload를 누르면 get 방식일 경우 Query String Parameters로 나오고 post 방식일 경우 Form Data라고 나온다.

23. 기능으로 분리한다? -> 메소드를 생각하기

24. 아래의 부분을 따로 클래스로 만들고, 접근 제어자를 private -> public / static 이라는 키워드를 사용해서 메모리에 올린다.

	private void ko(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 아래의 코드를 사용하려면 
		// 매개변수 HttpServletRequest request, HttpServletResponse response가 필요하다.
		// ServletException, IOException 예외 처리가 필요하다.
		request.setCharacterEncoding("UTF-8");
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
	}

	 
	import java.io.IOException;

	import javax.servlet.ServletException;
	import javax.servlet.http.HttpServletRequest;
	import javax.servlet.http.HttpServletResponse;

	public class Util {
	public static void ko(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 아래의 코드를 사용하려면 
		// 매개변수 HttpServletRequest request, HttpServletResponse response가 필요하다.
		// ServletException, IOException 예외 처리가 필요하다.
		request.setCharacterEncoding("UTF-8");
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
	}
}

	그리고 나서, 메서드에 static 키워드를 작성하고, 다른곳에서 사용할때는 static으로 메모리에 올려 놓았기 때문에, new를 사용하기 않고
	Util.ko(requst, response); 로 작성해서 사용하면 된다.
	
25. 브라우저 -------------> Servlet
			   request
			   
26. 브라우저 <------------- Servlet
			   response
				
27. 위의 브라우저와 Servlet 의 사이에서 한글 깨짐 현상을 해결하기 위해 필터를 정의해야 한다.

28. 필터를 만드려고 할때, class 생성할 때, Add를 눌르고 Filter 인터페이스 추가 하면 된다.

29. web.xml 파일에 아래의 코드를 추가해주면 된다.
  <filter>
	  <filter-name>ServletFilter</filter-name>
	  <filter-class>ServletFilter</filter-class>
  </filter>
  
  <filter-mapping>
	  <filter-name>ServletFilter</filter-name>
	  <url-pattern>/*</url-pattern>
  </filter-mapping>


30. '/' 는 루트를 의미한다.

31. 필터는 브라우저와 Servlet 중간에서 깨짐 현상을 방지하기 위해 사용한다.(UTF 인코딩 처리 방법(필터 사용))

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class ServletFilter implements Filter {

	@Override
	public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain)
			throws IOException, ServletException {
		System.out.println("필터");
		req.setCharacterEncoding("UTF-8");
		res.setCharacterEncoding("UTF-8");
		res.setContentType("text/html; charset=UTF-8");
		chain.doFilter(req, res); // 이부분을 추가해야 화면 처리가 된다.
	}

}








import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Result")
public class Result extends HttpServlet {

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
		System.out.println("이동");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열로 온 것을 정수형으로 바꿈.
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter(); // 브라우저에 출력하기 위함
		
		for(int i=0; i < cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i + 1) + " "+ txt);
			
		}
		
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	}

}






import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Result")
public class Result extends HttpServlet {

	// form 태그에서 method가 get 방식일때
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
		System.out.println("이동");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열로 온 것을 정수형으로 바꿈.
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter(); // 브라우저에 출력하기 위함
		
		for(int i=0; i < cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i + 1) + " "+ txt);
			
		}
		
	}

	// form 태그에서 method가 post 방식일때
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		System.out.println("포스트");
		request.setCharacterEncoding("UTF-8");
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열로 온 것을 정수형으로 바꿈.
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter(); // 브라우저에 출력하기 위함
		
		for(int i=0; i < cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i + 1) + " "+ txt);
			
		}
		
	}

}




import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Result")
public class Result extends HttpServlet {

	// form 태그에서 method가 get 방식일때
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		ko(request, response);
		System.out.println("이동");
		
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열로 온 것을 정수형으로 바꿈.
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter(); // 브라우저에 출력하기 위함
		
		for(int i=0; i < cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i + 1) + " "+ txt);
			
		}
		
	}

	// form 태그에서 method가 post 방식일때
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		ko(request, response);
		System.out.println("포스트");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열로 온 것을 정수형으로 바꿈.
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter(); // 브라우저에 출력하기 위함
		
		for(int i=0; i < cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i + 1) + " "+ txt);
			
		}
		
	}
	
	private void ko(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 아래의 코드를 사용하려면 
		// 매개변수 HttpServletRequest request, HttpServletResponse response가 필요하다.
		// ServletException, IOException 예외 처리가 필요하다.
		request.setCharacterEncoding("UTF-8");
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
	}

}



import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/Result")
public class Result extends HttpServlet {

	// form 태그에서 method가 get 방식일때
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Util.ko(request, response);
		System.out.println("이동");
		
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열로 온 것을 정수형으로 바꿈.
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter(); // 브라우저에 출력하기 위함
		
		for(int i=0; i < cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i + 1) + " "+ txt);
			
		}
		
	}

	// form 태그에서 method가 post 방식일때
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Util.ko(request, response);
		System.out.println("포스트");
		int cnt = Integer.parseInt(request.getParameter("cnt")); // 문자열로 온 것을 정수형으로 바꿈.
		String txt = request.getParameter("txt");
		PrintWriter pw = response.getWriter(); // 브라우저에 출력하기 위함
		
		for(int i=0; i < cnt; i++) {
			System.out.println(cnt + ", " + txt);
			pw.append((i + 1) + " "+ txt);
			
		}
		
	}
	

}

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class Util {
	public static void ko(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 아래의 코드를 사용하려면 
		// 매개변수 HttpServletRequest request, HttpServletResponse response가 필요하다.
		// ServletException, IOException 예외 처리가 필요하다.
		request.setCharacterEncoding("UTF-8");
		response.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
	}
}

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class ServletFilter implements Filter {

	@Override
	public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain)
			throws IOException, ServletException {
		System.out.println("필터");

	}

}



