20240523
1. 시험
: 문제해결 능력

Scanner.nextInt() 메소드가 사용자가 입력한 enter(개행문자) 를 제거하지 않기 때문이다.

사용자는 콘솔창에 숫자입력 후 enter를 누르는데,

이때 nextInt() 가 숫자는 입력받고, 개행문자는 제거하지않은 채 그대로 남겨둔다.

남겨진 개행문자가 다음 scan.nextLine() 의 입력으로 처리되어

곧바로 개행되고, 위와같이 출력된다.

오류 해결 방법 :
 
해결방법 1 - scan.nextInt 후 scan.nextLine() 하기 전, scan.nextLine() 을 한번 더 작성하여 개행문자 제거


Scanner 클래스의 nextLine() 메서드는 한 줄 전체를 입력으로 받기 때문에 공백 문자나 개행 문자를 포함한 문자열을 모두 입력받을 수 있다. 그러나 이로 인해 이전에 다른 next() 메서드를 사용한 후 nextLine()을 호출하는 경우 개행 문자(\n)가 남아있을 수 있어서 원하는 입력이 정상적으로 이루어지지 않는 오류가 발생할 수 있다... ㅠㅠ
** nextLine() 사용하기 전에 nextInt()를 쓴 경우에도 이 오류가 발생하는데 이건 제일 밑에 해결방법이 있다!

http://himedia.atosoft.kr/sc.asp


1일차 핵심(환경설정)
- 자바
오라클
Java8 버전만 무료  (2024년 7월16일까지만)
OPEN JDK 설치함

환경설정 이유
: 시스템 변수 : 계정을 바꿔도 똑같은 자바 버전을 사용하기 위함
: 실행할수 있는 명령어가 있기 때문에 설정해야한다.

2일차 핵심(조건문)

3일차 핵심(for문 및 배열)

4일차 핵심(배열)

5일차 핵심 (조건문, 반복문, 배열 활용 능력
package java0523;

import java.util.Scanner;

/*********************************
 * >> Console 입력 알아보기
 * Scanner 클래스의 라이프 사이클
 *********************************/

public class Study01 {

	public static void main(String[] args) {

		// class(new)는 객체이다.
		// 객체 생성시 메모리에 저장
		// class는 메인 메소드가 있어야 한다.
		// System.in 여기서 in은 입력을 의미
		
		/** 객체 생성 **/
		Scanner sc = new Scanner(System.in); // 입력받을수 있는 객체를 생성
		//System.out.println(sc);
		
		/** 객체 사용 **/
		int a = sc.nextInt();
		System.out.println(a);
		
		/** 객체 제거 **/
//		단일 프로그램일 경우는 sc.close(); 작성안해도 되지만, 주고 받는 프로그램일 경우 꼭 작성해줘야 메모리 낭비가 안된다.
//		sc.close(); 
		
		// close 밑에는 코드는 작성할수 있지만 사용할 수 없다.
//		int b = sc.nextInt();
//		System.out.println(b);
		
	}

}

package java0523;

import java.util.Scanner;

/*********************************
 * >> Console 입력 알아보기
 * Scanner 클래스를 이용하여 간단한 연산하기
 *********************************/

public class Study02 {

	public static void main(String[] args) {

		/** 객체 생성 **/
		Scanner sc = new Scanner(System.in);
		
		/** 객체 사용 **/
		
		System.out.println("연산할 숫자 2개를 넣으세요");
		
		int a = sc.nextInt();
		int b = sc.nextInt();
		
		System.out.println(a + b);
		
		/** 객체 제거 **/
		sc.close();
		
	}

}

package java0523;

import java.util.Scanner;

/*********************************
 * >> Console 입력 알아보기
 * Scanner 클래스를 이용하여 반복문를 멈추기
 *********************************/

public class Study03 {

	public static void main(String[] args) {

		/** 객체 생성 **/
		Scanner sc = new Scanner(System.in);

		/** 객체 사용 **/
		
		while(true) {
			String key = sc.nextLine(); // while문 안에서 입력을 받아야 한다.
			// "STOP".equals(key) 앞에 기준이 되는 것은 바뀌면 안되기 때문에 비교할 때 앞부분에 작성한다.
			// 대소문자 구문한다 !!!(소문자 stop를 작성할 시 멈추지 않고 STOP를 작성해야 멈춘다.)
			if("STOP".equals(key)) {
				break;
			}
		}
		
		/** 객체 제거 **/
		sc.close();
		
	}

}

package java0523;

import java.util.Scanner;

/*********************************
 * >> Console 입력 알아보기
 * Scanner 클래스를 이용하여 설문조사 하기
 *********************************/

public class Study04 {

	public static void main(String[] args) {

		/** 객체 생성 **/
		Scanner sc = new Scanner(System.in);
		
		/** 객체 사용 **/
		// 질문 10개
		// 배열 및 반복문 사용
		// 질문(반복문 사용?) -> 답(입력 받는 부분) 
		
//		// 내가 작성한 코드
		// 다시 작성해 보기
//		String[][] 배열 = new String[10][10];
//		for(int i = 0; i<배열.length; i++) {
//			if(i == 0) {
//				System.out.println("당신의 이름은? ");
//				배열[i][0] = "당신의 이름은? ";
//				배열[i][1]= sc.nextLine();
//			}else if(i == 1) {
//				System.out.println("당신의 나이은? ");
//				배열[i][0] = "당신의 나이은? ";
//				배열[i][1]= sc.nextLine();
//			}else if(i == 2) {
//				System.out.println("당신의 성별은? ");
//				배열[i][0] = "당신의 성별은? ";
//				배열[i][1]= sc.nextLine();
//			}else if(i == 3) {
//				System.out.println("당신의 나라는? ");
//				배열[i][0] = "당신의 나라는? ";
//				배열[i][1]= sc.nextLine();
//			}else if(i == 4) {
//				System.out.println("당신의 살고 있는 지역은? ");
//				배열[i][0] = "당신의 살고 있는 지역은? ";
//				배열[i][1]= sc.nextLine();
//			}else if(i == 5) {
//				System.out.println("당신의 학력은? ");
//				배열[i][0] = "당신의 학력은? ";
//				배열[i][1]= sc.nextLine();
//			}else if(i == 6) {
//				System.out.println("당신의 취미는? ");
//				배열[i][0] = "당신의 취미는? ";
//				배열[i][1]= sc.nextLine();
//			}else if(i == 7) {
//				System.out.println("당신의 직업은? ");
//				배열[i][0] = "당신의 직업은? ";
//				배열[i][1]= sc.nextLine();
//			}else if(i == 8) {
//				System.out.println("일주일에 3회 이상 대화하는 상대가 있습니까? ");
//				배열[i][0] = "일주일에 3회 이상 대화하는 상대가 있습니까? ";
//				배열[i][1]= sc.nextLine();
//			}
//			else{
//				System.out.println("당신은 하루의 세끼를 다 챙겨 먹습니까? ");
//				배열[i][0] = "당신은 하루의 세끼를 다 챙겨 먹습니까? ";
//				배열[i][1]= sc.nextLine();
//			}
//		}
//		System.out.println();
//		
//		for(int i =0; i<배열.length; i++) {
//			for(int j =0; j<배열[i].length; j++) {
//				System.out.print(배열[i][j]);
//			}
//			System.out.println();
//		}
		
//		// 강사님이 작성하신 코드
//		/** 객체 사용 **/
//		String q1 = "당신의 이름은?";
//		String q2 = "당신의 나이은?";
//		String q3 = "당신의 성별은?";
//		String q4 = "당신의 나라는?";
//		String q5 = "당신의 살고 있는 지역은?";
//		String q6 = "당신의 학력은?";
//		String q7 = "당신의 취미는?";
//		String q8 = "당신의 직업은?";
//		String q9 = "당신의 일주일에 3회 이상 대화하는 상대가 있습니까?";
//		String q10 = "당신은 하루의 세끼를 다 챙겨 먹습니까?";
//		
//		// 1차원 배열로 문제 풀이
//		String[] 배열1 = new String[] {q1,q2,q3,q4,q5,q6,q7,q8,q9,q10};
//		for(int i =0; i< 배열1.length; i++) {
//			System.out.println(배열1[i]);
//			System.out.println(sc.nextLine());
//		}
//		
//		// 2차원 배열로 문제 풀이
//		String[][] 배열2 = new String[][] {{q1, ""},{q2, ""},{q3, ""},
//							{q4, ""},{q5, ""},{q6, ""},
//							{q7, ""},{q8, ""},{q9, ""},{q10, ""}
//		};
//		for(int i =0; i<배열2.length; i++) {
//			System.out.print(배열2[i][0] + "\t");
//			배열2[i][1] = sc.nextLine();
//		}
//		
//		for(int i = 0; i<배열2.length; i++) {
//			System.out.print(배열2[i][0] + "\t");
//			System.out.println(" -> " + 배열2[i][1]);
//		}
		
		/** 객체 제거 **/
		sc.close();
		
		}

	}


package java0523;

import java.util.Scanner;

/*********************************
 * >> Console 입력 알아보기
 * Scanner 클래스와 반복문를 이용하여 계산기 만들기
 *********************************/

public class Study05 {

	public static void main(String[] args) {

		/** 객체 생성 **/
		Scanner sc = new Scanner(System.in);
		
		/** 객체 사용 **/
//		// 내가 작성한 코드
//		// 덧셈, 뺄셈, 곱셈, 나눗셈
//		int[][] 배열 = new int[10][10];
//		for(int i =0; i<배열.length; i++) {
//			for(int j =0; j<배열[i].length; j++) {
//				System.out.println("연산 기호를 넣어주세요");
//				String 입력값 = sc.nextLine();
//				if("+".equals(입력값)) {
//					배열[i][j] = sc.nextInt();
//					int a = 배열[i][j];
//					배열[i][j] = sc.nextInt();
//					int b = 배열[i][j];
//					System.out.println(a + " + " + b + " = " + (a+b));
//				}else if("-".equals(입력값)) {
//					배열[i][j] = sc.nextInt();
//					int a = 배열[i][j];
//					배열[i][j] = sc.nextInt();
//					int b = 배열[i][j];
//					System.out.println(a + " - " + b + " = " + (a-b));
//				}else if("*".equals(입력값)) {
//					배열[i][j] = sc.nextInt();
//					int a = 배열[i][j];
//					배열[i][j] = sc.nextInt();
//					int b = 배열[i][j];
//					System.out.println(a + " * " + b + " = " + (a*b));
//				}
//			}
//		}
		

// 문제 발생 및 해결
// 사용자는 콘솔창에 숫자입력 후 enter를 누르는데
// 이때 nextInt() 가 숫자는 입력받고, 개행문자는 제거하지않은 채 그대로 남겨둔다.
// 남겨진 개행문자가 다음 sc.nextLine() 의 입력으로 처리되어 버린다.
// 따라서 sc.nextInt 후 sc.nextLine() 하기 전, sc.nextLine() 을 한번 더 사용하여
// 개행문자를 먼저 처리해주면 문제가 해결된다.
// switch case 문에 있는 case의 경우도(ex) case 1 -> case "1")와 같은 형식으로 수정해
// 줘야된다.
		
		// 강사님이 작성한 코드
		/** 객체 사용 **/
		String 더하기 = "+";
		String 빼기 = "-";
		String 나누기 = "/";
		String 곱하기 = "*";
		
		while(true) {
			System.out.println("첫번째 숫자를 입력하세요.");
			int a = sc.nextInt();
			
			int b = sc.nextInt();
			//String b = sc.nextLine(); // 오류 생성됨 이유를 알아야 함(시험문제)!!!
			
			System.out.println("두번째 숫자를 입력하세요.");
			int c = sc.nextInt();
	
			String d = "";
			switch (b) {
			case 1:
					d = a + 더하기 + c + "=" + (a - c);
					break;
			case 2:
					d = a + 빼기 + c + "=" + (a - c);
					break;
			case 3:
					d = a + 나누기 + c + "=" + (a / c);
					break;
			case 4:
					d = a + 곱하기 + c + "=" + (a * c);
					break;
			default:
				
			}
			
			System.out.println(d);
		}
		/** 객체 제거 **/
		//sc.close();
		
	}

}

1. 환경변수 문제

문제

- 개인 사용자 변수에서 path 에  %JAVA_HOME%\bin (bin: 실행할 수 있는 명령어가 들어가 있음)을 넣고, 다른 계정에서 자바를 사용하려고 할 때 문제 발생

​

해결 

- 시스템 변수 path에 %JAVA_HOME%\bin을 넣어 모든 계정에서 사용가능하도록 해결 할 수 있음

  (계정을 바꿔도 똑같은 자바 버전을 사용하기 위함)

​

---------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------

​

2.  배열 문제

1) 예상문제

크기가 5행 5열인 배열을 생성하였다.

String 배열[][] = new String[5][5]; 

​

배열 안에 값이 들어있다는 전제하에 값을 꺼내어 5행 5열의 출력할 때 

System.out.println(배열[5][5]); <- 이렇게 출력하였을 때 아래와 같은 오류메시지가 나는 이유?

​

오류메시지

Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Index 6 out of bounds for length 5  at java0522.Study03.main(Study03.java:48)

​

문제

- index의 범위는 0부터 ~ 4까지이기 때문에 위의 출력문은 범위가 초과 됨

​

해결

해결 0) index의 범위는 0부터 시작이므로 위의 배열은 0~4까지의 index를 갖기 때문에 i <= numbers.length 에서 i<numbers.length 로 변경하여 범위에서 벗어나지 않도록 한다.

해결 1) index의 범위는 0부터 시작이므로 위의 배열은 0~4까지의 index를 갖기 때문에 배열[4][4]로 출력하면 5행5열의 값을 출력할 수 있다.

해결 2) 배열의 크기를 늘릴 수 있다는 전제하에 배열의 크기를 new String[6][6]으로 늘린다.

​

​

2) 예상문제

for 문 while문

문제

for문과 while문을 가지고 구구단을 만들 시, 곱해지는 수의 증가가 안되는 문제 발생.

​

해결

변수가 for 나 while문 밖에 위치해야 한다. 그리고 곱해지는 수의 증가 또는 감소를 위해 변수에 별도로 증가값이나 감소값을 생성해줘야 한다.

​

--------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------

​

3. scanner / switch case 문제

문제

-사용자는 콘솔창에 숫자입력 후 "enter"를 누르는데, 이때 개행문자가 scan.nextLine()의 입력으로 처리되기 때문에 기호를 입력받을 수 없게된다.

​

해결

1. String b = sc.nextLine();의 문자형식을 받기 때문에 switch case문에서 case별 문자처리("") 해준다.

2. 문자를 입력받는 sc.nextLine();를 위에 한번 더 사용하여 enter를 눌러 생긴 개행문자를 먼저 처리해줌으로써 해결할 수 있다.

​

--------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------

​

4. Exception in thread "main" java.lang.Error: Unresolved compilation problem: 

Syntax error, insert "}" to complete MethodBody

​

문제

"}" 닫는 코드 안적어서 나타나는 에러

​

해결

열고 닫는 코드를 확인하여, 닫아준다.

​

--------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------

​

5. 개행 문제

이차원 배열에 값을 넣은 후 출력 할때 

행이 바뀔 때 개행이 안되는 이유는? 

​

오류 코드 (아래)

​

int 배열[][] = new int[3][5];

​

for(int i =0; i<배열.length; i++){

for(int j = 0; j<배열[i]ength; j++){

배열[i][j] = 3;}}

​

for(int i =0; i<배열.length; i++){

for(int j = 0; j<배열[i]ength; j++){

System.out.print(배열[i][j]);}

}

​

--------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------

​

6. 크기

이차원배열 배열에서 배열.length와 배열[i].legth가 의미하는 것은?

int 배열[][] = new int[3][5];

​

[해결]

배열.length는 행의 크기(세로의 크기) 3이고

배열[i].length는 열의 크기(가로의 크기) 5이다.

​

--------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------

​

7. 다음 코드가 실행되지 않는 이유와 해결 방안을 설명하시오. (심심풀이문제)

int k = 16;

        int[][] arr = new int[4][4];

        for(int i= 0; i < arr.length ; i++) {

            for(int j=0; j > arr[i].length; j++) {

                arr[i][j] = k;

                k--;

                System.out.print(arr[i][j] + ",\t");

            }

            System.out.println();

        }

​

답

int k = 16;

        int[][] arr = new int[4][4];

        for(int i= 0; i < arr.length ; i++) {

            for(int j=0; j < arr[i].length; j++) {

                arr[i][j] = k;

                k--;

                System.out.print(arr[i][j] + ",\t");

            }

            System.out.println();

        }

    }

}


