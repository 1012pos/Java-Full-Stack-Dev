20240520
1. 한국소프트웨어산업(응용SW개발자)
: 평균 임금 확인 가능

2. 순서도
: Flowgorithm 설치하기(http://www.flowgorithm.org/)
: 주프로그램(메인메소드)
: 입력(Scanner 역할)

3. 반복문
: for 문(break, continue 둘다 사용 가능)

4. 변수의 값의 변화가 궁금하면 무조건 찍어보기

5. 특수 문자 공부하기

6. team -> reset 하는 방법 다시 알기

7. while문은 조건식이 참일 때만 수행

8. do ~ while 문은 do에 있는 명령문 실행한 후 조건식이 참일 때 수행

9. 배열
: 자료형[ ] 변수명 = new 자료형[크기];
: 자료형 변수명[ ] = new 자료형[크기];
- int [ ] 숫자들 = new int[5];
- String[ ] 이름들 = new String[3];

10. 인덱스
: 변수명[인덱스] = 값;
- int [ ] 숫자들 = new int[3];
숫자들[0] = 1;
숫자들[1] = 3;
숫자들[2] = 6;
// 인덱스 0 ~
// 크기 1 ~
즉, 인덱스와 크기의 차이는 -1이라는 점 알아야 한다.

11. 2차원 배열
: 자료형[ ][ ]  변수명 = new 자료형[세로][가로];


package java0520;
/***********************
 * * >> 반복문
 * for          : for( ; ; ) {}
 ***********************/

public class Study01 {

	public static void main(String[] args) {

		// 전역변수 : class 내에서 사용
		// 지역변수 : for문 내에서 사용
		
		int tot = 0;
		
		for(int i = 1; i <= 10; i++) { // 1 > 2 > 3 > 4 > 5 > ... > 10
			//System.out.println("전 : " + i);
			tot += i; // (tot = tot + i)
			//System.out.println("후 : " + i);
			
		}
		System.out.println("반복문의 합 : " + tot);
	}

}


package java0520;

public class Study02 {

	public static void main(String[] args) {

		// 구구단
		// 단 * 증가값 = 결과값
		
		// 문제1) 짝수 단수만 출력 case1
		/*
		for(int 단 = 1; 단 <= 9; 단++) { // 단를 위한 반복문
			if(단%2 == 0) { // 2단, 4단, 6단, 8단만 출력(짝수단만 출력)
				for(int 증가값 = 1; 증가값 <= 9; 증가값++) { // 증가값 위한 반복문 1 ~ 9
					
					// 출력 하는 곳
					System.out.println(단 + " x " + 증가값 + " = " + (단 * 증가값));
				}
			}
			
			
		}
		*/
		/*
		// 문제1) 짝수 단수만 출력 case2, [continue 사용]
		for(int 단 = 1; 단 <= 9; 단++) { // 단를 위한 반복문
			
			// 2단, 4단, 6단, 8단만 출력(짝수단만 출력)
			if((단%2) == 1)  continue;
				
				for(int 증가값 = 1; 증가값 <= 9; 증가값++) { // 증가값 위한 반복문 1 ~ 9
					
					// 출력 하는 곳
					System.out.println(단 + " x " + 증가값 + " = " + (단 * 증가값));
				}
			
		}
		*/
		
		
		// 문제2) 한줄에 단수를 3개 출력 (예시 1 * 1 = 1  2 * 1 = 2  3 * 1 = 3)
		// X 단계식을 원하면 출력하는 부분도 똑같이 X 개의 출력문이 있어야 함 !!!
		for(int 단 = 1; 단 <= 9; 단 += 3) { // 3단계식 위한 반복문
		
			for(int 증가값 = 1; 증가값 <= 9; 증가값++) { // 증가값 위한 반복문 1 ~ 9
				
				// 출력 하는 곳
				System.out.print(단 + " x " + 증가값 + " = " + (단 * 증가값) + "\t"); // "\t"은 탭의 의미
				int a = 단 + 1;
				int b = a + 1;
				//int c = b + 1;
				System.out.print(a + " x " + 증가값 + " = " + (a * 증가값) + "\t"); 
				System.out.println(b + " x " + 증가값 + " = " + (b * 증가값));
				//System.out.println(c + " x " + 증가값 + " = " + (c * 증가값));
			}
			System.out.println();
		}
		
		
		// 문제3) 증가될 단수를 제어 하세요
		
		int step = 3;
		for(int 단 = 1; 단 <= 9; 단 += step) { // 3단계식 위한 반복문
			
			for(int 증가값 = 1; 증가값 <= 9; 증가값++) { // 증가값 위한 반복문 1 ~ 9
				
				// step > 1, 4, 7
				// 1 <= 3; 4 <= 3; 7 <= 3;
				// s >> 1, 2, 3 >> 4, 5, 6 >> 7, 8 ,9
				for(int s = 단; s < (단+step); s++) { // s >> step +1 / step + 2 + 
					System.out.print(s + " x " + 증가값 + " = " + (s * 증가값) + "\t");
				}
				System.out.println();
			}
			System.out.println();
		}

	}
	

}


package java0520;

/*************************
 *  >> 반복문
 *  while : while() {}
 *  do while : do {} while();
 */

public class Study03 {

	public static void main(String[] args) {

		// while 문은 조건식이 참일때만 수행
		int s = 0;
		int a = 4;
		while(s < a) {
		//	System.out.print(s + "\t");
		//	System.out.print(a + "\t");
		//	System.out.println(s >= a);
		//	if(s >= a) break; // 횟수 검사
			System.out.println("반복문");
			s++;
		}
		
		// do ~ while 문은 do에 있는 명령문 실행한 후 조건식이 참일 때 수행
		do {
			System.out.println("반복문");
		} while(a < s);
		
	}

}


package java0520;

public class Study04 {

	public static void main(String[] args) {

		int[] 정수형배열 = new int[8]; // 8의 의미는 8개
		
		정수형배열[2] = 5; // 변수명[인덱스값] = 값;

		
		// 문제1) 인덱스 마지막에 10의 값을 넣고 마지막 인덱스만 출력 하시오.
//		int s = 정수형배열.length;
//		System.out.println(s);
		// 인덱스 0 ~
		// 크기 1 ~
		정수형배열[정수형배열.length - 1] = 10;
		System.out.println(정수형배열[정수형배열.length - 1]);
		
		for(int i = 0; i < 정수형배열.length; i++) { // i <= 정수형배열.length; 오류가 발생한다(배열의 공간보다 더 담으려고 해서 오류가 발생) 그렇기 때문에 i < 정수형배열.length; 로 수정해야함
			System.out.println(정수형배열[i]);
			
			}
	}

}


package java0520;

public class Study05 {

	public static void main(String[] args) {

//		// int[][] 배열 = new int[세로][가로];
//		int[][] 배열 = new int[4][5];
//		
//		배열[0][1] = 10;
//		배열[2][2] = 20;
//		배열[3][3] = 30;
//		
//		// 0, 1 , 2 , 3, 4(마지막)
//		for(int i =0; i < 배열.length; i++) {
//		//	System.out.println(배열[i][i]);
//			// 1 > [0][0] = 0
//			// 2 > [1][1] = 0
//			// 3 > [2][2] = 20
//			// 4 > [3][3] = 30
//			for(int j =0; j < 배열[i].length; j++) {
//				System.out.print(배열[i][j] +"\t");
//			}
//			System.out.println();
//		}
		
		
//		String[][] 배열 = new String[10][10];
//		
//		for(int i =0; i < 배열.length; i++ ) {
//			for(int j =0; j < 배열[i].length; j++) {
//				// 0 < 1
//				if(j < (i+1)) {
//					배열[i][j] = "O";
//				} else {
//					배열[i][j] = "X";
//				}
//				System.out.print(배열[i][j] + "\t"); // 출력
//			}
//			System.out.println();
//		}
		
		// String[][] 배열 = new String[세로][가로];
		String[][] 배열 = new String[5][5];
		
		for(int i = 0; i < 배열.length; i++) {
			for(int j = 0; j < 배열[i].length; j++) {
				if((i+1) > j) {
					배열[i][j] = "메";
				}else {
					배열[i][j] = "가";
				}
				System.out.print(배열[i][j] + "\t");
			}
			System.out.println();
		}
		
		
		
	}

}


